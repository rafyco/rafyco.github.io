[{"categories":["it"],"content":"I use tools from JetBrains a lot in my work. One of the things that I like about their software is the well-performing version control system management tool. In addition to an efficient overview of the code history, we also have a lot of options to manage it in an easy and fun way. Today I will present a simple way to make links in the commit descriptions to allow faster navigation from the history to the page with the bug you are viewing. Warning This article was translated with DeepL.com (free version) from polish language. I have made every effort to make it correct. However, if you found any errors or inaccuracies, please let me know. ","date":"2025-04-10","objectID":"/en/posts/issue-link/:0:0","tags":["intelij","development","ide","jetbrains"],"title":"Issue navigations in inteliJ","uri":"/en/posts/issue-link/"},{"categories":["it"],"content":"tl;dr An article on how to make page links in commit descriptions in IDE from JetBrains. You find this option in Settings | Version Control | Issue Navigation. You add a new entry, Add issue Navigation Link. In Issue ID you type the regexp of the commit fragment that you want to be the link. In Issue link you compose the link based on the regexp. The configuration is stored in the .idea/vcs.xml file in the project configuration. It can be commited, so that it is available to collaborators. If you are my collaborator check Bonus. ","date":"2025-04-10","objectID":"/en/posts/issue-link/:1:0","tags":["intelij","development","ide","jetbrains"],"title":"Issue navigations in inteliJ","uri":"/en/posts/issue-link/"},{"categories":["it"],"content":"0. Before you start reading ‚Ä¶make sure that: ‚úÖ You are using JetBrains tools (IDE). There is a good chance that in other IDEs the problem can be solved in a similar way, but every software is different and these differences cannot be covered in a single post. ‚úÖ You know the basics of regexp - Regular expressions are a basic way to describe shuffle code. Without this knowledge will be difficult to understand how it even works. You don‚Äôt need to be able to create complex descriptions, but it‚Äôs a good idea to be able to analyze what is happening in the example shown. ‚úÖ You know what the task identifier looks like - This could be, for example, #123. It is important that you know what this identifier and which part of it is needed to create the address. ‚úÖ Address with the job you want to have a link to I will use my project ytrss, and the github issues website. ","date":"2025-04-10","objectID":"/en/posts/issue-link/:2:0","tags":["intelij","development","ide","jetbrains"],"title":"Issue navigations in inteliJ","uri":"/en/posts/issue-link/"},{"categories":["it"],"content":"1. Issues links To create our links, we first need to think about what the task description looks like in our project, and where we want it to redirect. In the example I will use linking to tasks on github issues, but you can successfully customize it for your own project. List of commits without additional links Let‚Äôs say we want the string #123 to redirect to the link https://github.com/rafyco/ytrss/pull/123. Let‚Äôs note, that 123 is actually the ID of our task, which we want to pass to the url, as a variable. Add a position in Issue Navigation Open the Settings menu (or select the keyboard shortcut: [ctrl][alt][s]) | Version Control | Issue Navigation. Then add a new item by selecting Add Issue Navigation Link. Popup where we describe our links In the Issue ID section, we type the element to be highlighted. For this, we use the regexp syntax to cut out a specific fragment. In addition, in parentheses, we mark the fragment that will be needed to create the link. In this case, it is task number. It will be available after the next sequence number started with a $ character, for example: $1. The $0 character marks the entire selected fragment. Under the item Issue link we enter the url where we want the tag to take us to. Remember to paste in the appropriate place paste the tag, selected in the previous regexp. After adding a new entry, the list looks as follows: list of commits with described links After clicking on the marked links, we should get a browser in which the page with the task will open. ","date":"2025-04-10","objectID":"/en/posts/issue-link/:3:0","tags":["intelij","development","ide","jetbrains"],"title":"Issue navigations in inteliJ","uri":"/en/posts/issue-link/"},{"categories":["it"],"content":"2. Save the configuration in the repository. Correctly executed configuration should create or edit a file at .idea/vcs.xml in the root directory of the project. It contains the appropriate conÔ¨Åguration. This file can be ignored, or it can be added to the project so that it is available to other developers. The file after the changes described above should look as follows: \u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e \u003cproject version=\"4\"\u003e \u003ccomponent name=\"IssueNavigationConfiguration\"\u003e \u003coption name=\"links\"\u003e \u003clist\u003e \u003cIssueNavigationLink\u003e \u003coption name=\"issueRegexp\" value=\"#([0-9]*)\" /\u003e \u003coption name=\"linkRegexp\" value=\"https://github.com/rafyco/ytrss/issues/$1\" /\u003e \u003c/IssueNavigationLink\u003e \u003c/list\u003e \u003c/option\u003e \u003c/component\u003e \u003ccomponent name=\"VcsDirectoryMappings\"\u003e \u003cmapping directory=\"$PROJECT_DIR$\" vcs=\"Git\" /\u003e \u003c/component\u003e \u003c/project\u003e Our rule is defined in the \u003cIssueNavigationLink\u003e tag. You may be tempted to write these rules yourself, while even if you don‚Äôt, it‚Äôs good to know that the described configuration is available from the configuration file. ","date":"2025-04-10","objectID":"/en/posts/issue-link/:4:0","tags":["intelij","development","ide","jetbrains"],"title":"Issue navigations in inteliJ","uri":"/en/posts/issue-link/"},{"categories":["it"],"content":"3. Some examples While working on the ytrss project, I added some rules with links for commits. I will try to describe them in this section, as an inspiration for your own solutions. All of them are related to github issues, and links to this service, so they can be successfully used in your projects. ","date":"2025-04-10","objectID":"/en/posts/issue-link/:5:0","tags":["intelij","development","ide","jetbrains"],"title":"Issue navigations in inteliJ","uri":"/en/posts/issue-link/"},{"categories":["it"],"content":"Link to tasks Here I have assumed that all shuffles should start with the keyword closes or ref. You can skip this assumption and create a link as I described in previous section, but I wanted to have confirmation that these words would be used and that the correctness of the commit description would also be confirmed before highlighting it in the changelog. \u003cIssueNavigationLink\u003e \u003coption name=\"issueRegexp\" value=\"(closes|ref) #([0-9]*)\" /\u003e \u003coption name=\"linkRegexp\" value=\"https://github.com/rafyco/ytrss/issues/$2\" /\u003e \u003c/IssueNavigationLink\u003e Example: closes #42: We don‚Äôt need info about completion ","date":"2025-04-10","objectID":"/en/posts/issue-link/:5:1","tags":["intelij","development","ide","jetbrains"],"title":"Issue navigations in inteliJ","uri":"/en/posts/issue-link/"},{"categories":["it"],"content":"Pull request Actually, links to issues and pull requests in github are interchangeable, nevertheless, in the case of pull requests, it is useful to use an additional tag to help us quickly locate the source of our changes. \u003cIssueNavigationLink\u003e \u003coption name=\"issueRegexp\" value=\"pull request #([0-9]+)\" /\u003e \u003coption name=\"linkRegexp\" value=\"https://github.com/rafyco/ytrss/pull/$1\" /\u003e \u003c/IssueNavigationLink\u003e Example: Merge pull request #160 from rafyco/rafyco-patch-1 ","date":"2025-04-10","objectID":"/en/posts/issue-link/:5:2","tags":["intelij","development","ide","jetbrains"],"title":"Issue navigations in inteliJ","uri":"/en/posts/issue-link/"},{"categories":["it"],"content":"Link to a page with a tag or version. In addition to tasks, you can also create a link to a specific version. This will quickly get you to the page from which you download a specific version of the application. \u003cIssueNavigationLink\u003e \u003coption name=\"issueRegexp\" value=\"([0-9]+.[0-9]+.[0-9]+(rc[0-9]+)?) version\" /\u003e \u003coption name=\"linkRegexp\" value=\"https://github.com/rafyco/ytrss/releases/tag/v$1\" /\u003e \u003c/IssueNavigationLink\u003e Example: Upgrade to 0.3.5rc1 version ","date":"2025-04-10","objectID":"/en/posts/issue-link/:5:3","tags":["intelij","development","ide","jetbrains"],"title":"Issue navigations in inteliJ","uri":"/en/posts/issue-link/"},{"categories":["it"],"content":"Other ideas The possibilities of links are really many, and we can use links for really many applications, even more so if we take care of the right commit message. Here are some of my ideas: Link to the page of the author of the changes, who is mentioned in the description. A link to the page of a specific customer who needs a particular change. A link to open a chat with the owner of the corresponding commit. Link to a page with documentation (based on some tag). Link to a page with a description of the functionality, or a list of tasks (epic) related to it. A link in the see also section that links to a search engine for relevant topics related to the task. Tags related to a particular topic. A link that opens an application with specific parameters described in the task. Do you have anything else? Add in the comments üòäüòäüòä. ","date":"2025-04-10","objectID":"/en/posts/issue-link/:5:4","tags":["intelij","development","ide","jetbrains"],"title":"Issue navigations in inteliJ","uri":"/en/posts/issue-link/"},{"categories":["it"],"content":"4 Bibliography https://www.jetbrains.com/ides/ - Various IDEs from JetBrains. https://www.jetbrains.com/help/webstorm/2024.3/handling-issues.html?reference.settings.vcs.issue.navigation.add.link=\u0026keymap=XWin - Guide from the manufacturer‚Äôs website. ","date":"2025-04-10","objectID":"/en/posts/issue-link/:6:0","tags":["intelij","development","ide","jetbrains"],"title":"Issue navigations in inteliJ","uri":"/en/posts/issue-link/"},{"categories":["it"],"content":"üéÅüéÅüéÅ Bonus for coworkers If we work together on a project, or are employed by the same employer, ask me about my Navigation issues file on corporate messenger and I will be happy to share it with you. ","date":"2025-04-10","objectID":"/en/posts/issue-link/:7:0","tags":["intelij","development","ide","jetbrains"],"title":"Issue navigations in inteliJ","uri":"/en/posts/issue-link/"},{"categories":null,"content":"Hello Worldüëã I am a fullstack software engineer from Warsaw, Poland Programmer, music and technology lover. In my free time I like to sink myself in the vapors of absurdity, while creating my creations and taking the world to a new level of abstraction. When the creative urge leaves me, I give myself over to designing software. And when all else fails, I put on my cape and save the world from evil‚Ä¶ Decide for yourself if I haven‚Äôt made up something. üî≠ I work as a fullstack engineer with the React framework. üìü In my spare time I slap together mobile apps using Flutter. üëß Privately a father of little Pola. üå± I‚Äôm constantly learning. üîó Linktree: /rafyco üì∏ My photos: @rafal.kobel üåç website: rafyco.pl üì´ You can contact me here: rafalkobel@rafyco.pl ‚ö° Fun fact: Programming is my superpower, but I also like to play the guitar. üé∏ ","date":"2025-03-17","objectID":"/en/about/:0:0","tags":null,"title":"About","uri":"/en/about/"},{"categories":["reflections"],"content":"A few days ago, while looking at a group of children, I noticed an interesting phenomenon. Today I will write a few words about it. Warning This article was translated with DeepL.com (free version) from polish language. I have made every effort to make it correct. However, if you found any errors or inaccuracies, please let me know. Advertisements, who doesn‚Äôt know them. They surround us from all sides, leaving a permanent mark in our psyche encouraging us to consume a product or use someone‚Äôs service. No wonder, then, that people are reacting more and more aggressively to successive offers appearing in the press or on television. What is surprising is the zeal with which ad creators try to convey product information to their ‚Äúvictims.‚Äù The latest ads are already appearing literally everywhere, starting with our phones and ending in the proverbial refrigerator. But what if they advertised their products in a slightly more sophisticated way and played straight from our friends? However, you don‚Äôt need any space-age technologies to do this. You can approach the problem a bit more subtly. But before I go into how this can be done, let‚Äôs try to analyze the course of a sample advertising campaign. Professional agencies probably have their own scenarios and breakdowns, but I will present my idea of it. It consists of several consecutive parts. The first is to familiarize the customer with the brand. Even before we are aware of what product the logo is about, marketers try to evoke positive associations at the very sight of it. This will make the new product seem familiar to us, and therefore more approachable than if it were shown to us without any introduction. The next stage is ‚Äúproper advertising.‚Äù Companies, publish wherever they can songs and catchy advertising slogans just for us to hammer them into our consciousness. Once this is done the final stage, i.e. repetition, takes place. In this part the ‚Äúvictim‚Äù already has the given tune in his subconscious and easily associates it with the product. So it is enough to present the customer with a given stimulus from time to time, through which he will remember our offer. When it comes to giving people information about a product, it is difficult, at least at the initial stage, to rely solely on associations. Without providing external information and a description of the product, people‚Äôs minds are unable to connect the brand in question with the perceived stimulus. Fortunately, at a later stage of an advertising campaign, this is already as possible. Once a product is associated with a certain pattern that can be easily duplicated, its mere reminder is enough to set the innocent consumer‚Äôs thoughts on the right track. Thus, people‚Äôs brains are programmed to produce needs in response to innocent signals, such as a melody or an interesting advertising slogan. These mechanisms can be transmitted through a variety of sources, from radio broadcasts to elevator tunes, but the most interesting of all mediums is man himself. It‚Äôs interesting that when we play a modern game on our phones, we notice lots of advertising interludes and incentives to make microtransactions, and we don‚Äôt realize how many times information about the product comes to us from our own charges. Although we don‚Äôt always realize what the slogan is about, they remind us of the existence of a product we would otherwise forget about. It seems that many mechanisms seemingly related to the media can be observed in the surrounding world. Probably some of them are easier, others are more difficult to notice. In each it is worth looking at seemingly familiar phenomena from a different angle to see something new. And you, what are your views on advertising lurking at us from all sides? Write in the comments. ","date":"2017-09-26","objectID":"/en/posts/nagrywarka/:0:0","tags":["ads"],"title":"Human recorder","uri":"/en/posts/nagrywarka/"},{"categories":["reflections"],"content":"A Polish philosopher once ruled that the sun stands still and all the other planets revolve around it. Contrary to the common belief of the time that the sun is centrally located, he managed to convince the whole world of the validity of his views and won international fame. Warning This article was translated with DeepL.com (free version) from polish language. I have made every effort to make it correct. However, if you found any errors or inaccuracies, please let me know. However, this fact was not accepted for a long time, and a long time had to pass before this happened. Many scientists could not afford to change the way they thought about the appearance of the cosmos at the time especially having many scientific works based on geocentrism. It is noteworthy that both the geocentric and the later heliocentric models are only approximations of how the planets interact, yet both work well in today‚Äôs applications. In reality, the movements of the planets are much more complicated by which the only method of estimating approximate positions are computer models. Nevertheless, these problems have provoked many philosophical discussions and deliberations, and their contribution to today‚Äôs science is invaluable. They show us how limited the human mind is and how many ways everyday phenomena can be considered. In this blog you will have the opportunity to look at various philosophical and social problems from different angles, and a different point of view will give you insight into interesting issues you have not paid attention to before. I invite you to post in the comments ideas for topics that you find interesting and could be an interesting continuation of the series. I also invite you to follow the blog. There will soon be additional information on how you can get information about new posts in an easy and fun way. You are cordially invited Rafa≈Ç Kobel ","date":"2017-08-18","objectID":"/en/posts/prologue/:0:0","tags":[],"title":"Prologue","uri":"/en/posts/prologue/"}]